{"meta":{"title":"潘铎的博客","subtitle":"潘铎","description":"day day up","author":"PPPddd","url":"http://pdbuz.com","root":"/"},"pages":[{"title":"tags","date":"2020-10-28T09:00:38.000Z","updated":"2020-10-28T09:00:38.113Z","comments":true,"path":"tags/index.html","permalink":"http://pdbuz.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"猫片","slug":"猫片","date":"2020-10-29T09:00:25.000Z","updated":"2020-10-29T09:08:19.808Z","comments":true,"path":"2020/10/29/猫片/","link":"","permalink":"http://pdbuz.com/2020/10/29/%E7%8C%AB%E7%89%87/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"在gitlab ci中使用puppeteer进行e2e测试(基于antd pro v5)","slug":"在gitlab-ci中使用puppeteer进行e2e测试-基于antd-pro-v5","date":"2020-10-29T07:51:27.000Z","updated":"2020-10-29T08:54:07.821Z","comments":true,"path":"2020/10/29/在gitlab-ci中使用puppeteer进行e2e测试-基于antd-pro-v5/","link":"","permalink":"http://pdbuz.com/2020/10/29/%E5%9C%A8gitlab-ci%E4%B8%AD%E4%BD%BF%E7%94%A8puppeteer%E8%BF%9B%E8%A1%8Ce2e%E6%B5%8B%E8%AF%95-%E5%9F%BA%E4%BA%8Eantd-pro-v5/","excerpt":"基于antd pro v5 搭建的项目 直接进行ci测试的时候。puppeteer加载chromium process会报错： 本地开发环境没有此问题 ci使用的docker镜像为node 15 查阅资料发现是因为chrome在进行headless测试时,需要安装一些依赖; 参考 使用gitlab生成安装有完全依赖的centos镜像 用于ci测试","text":"基于antd pro v5 搭建的项目 直接进行ci测试的时候。puppeteer加载chromium process会报错： 本地开发环境没有此问题 ci使用的docker镜像为node 15 查阅资料发现是因为chrome在进行headless测试时,需要安装一些依赖; 参考 使用gitlab生成安装有完全依赖的centos镜像 用于ci测试 123456789101112#镜像保存在gitlab镜像仓库 名称为node-with-chromeFROM centos:7#chrome在templates中 使用cnpm安装。puppeteer调用时直接指定exec pathRUN curl --silent --location https://rpm.nodesource.com/setup_10.x | bash -RUN yum install -y nodejsRUN npm -v#chrome依赖RUN yum install pango.x86_64 libXcomposite.x86_64 libXcursor.x86_64 libXdamage.x86_64 libXext.x86_64 libXi.x86_64 libXtst.x86_64 cups-libs.x86_64 libXScrnSaver.x86_64 libXrandr.x86_64 GConf2.x86_64 alsa-lib.x86_64 atk.x86_64 gtk3.x86_64 ipa-gothic-fonts xorg-x11-fonts-100dpi xorg-x11-fonts-75dpi xorg-x11-utils xorg-x11-fonts-cyrillic xorg-x11-fonts-Type1 xorg-x11-fonts-misc -y 在antd pro项目中，安装puppeteer 1cnpm i puppeteer -S 修改tests/getBrowser.js 手动指定puppeteer自带的chrome路径作为执行路径 123456789101112131415161718192021//...let pwd = execSync(`pwd`);pwd = pwd.toString().trim();const executablePath = pwd + &#x27;/node_modules/_puppeteer@5.4.0@puppeteer/.local-chromium/linux-809590/chrome-linux/chrome&#x27;; //替换为实际的路径try &#123; const puppeteer = require(&#x27;puppeteer&#x27;); const browser = await puppeteer.launch(&#123; executablePath, // headless:true, // args: [ &#x27;--disable-gpu&#x27;, &#x27;--disable-dev-shm-usage&#x27;, &#x27;--no-first-run&#x27;, &#x27;--no-zygote&#x27;, &#x27;--no-sandbox&#x27;, ], &#125;);&#125; 更改.gitlab-ci.yml 使用新的centos docker镜像 12345678910111213test:# image: node:15.0.1image: xxx/images/node-with-chrome #(gitlab镜像仓库地址)stage: testcache:paths: - downloadbefore_script: - npm -v - node -vscript: - npm run testwhen: on_success git提交 进行ci测试","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://pdbuz.com/tags/%E5%89%8D%E7%AB%AF/"}]}],"categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://pdbuz.com/tags/%E5%89%8D%E7%AB%AF/"}]}